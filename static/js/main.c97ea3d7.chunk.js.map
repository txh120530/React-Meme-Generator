{"version":3,"sources":["components/MemeGenerator.js","App.js","index.js"],"names":["MemeGenerator","handleChange","event","target","name","value","setState","handleClick","state","memeID","randomNumber","Math","floor","random","allMemeImgs","length","randomImg","url","id","obj","find","x","console","log","increaseFont","font_size","topText","bottomText","fetch","then","data","json","response","memes","className","htmlFor","type","placeholder","onChange","this","onClick","style","fontSize","Number","src","alt","Component","App","React","ReactDOM","render","document","querySelector"],"mappings":"iOAuHeA,E,YApHd,aAAe,IAAD,8BACb,+CAaDC,aAAe,SAAAC,GAAU,IAAD,EACDA,EAAMC,OAArBC,EADgB,EAChBA,KAAMC,EADU,EACVA,MACb,EAAKC,SAAL,eAAgBF,EAAOC,KAhBV,EAmBdE,YAAc,WACb,GAAyB,KAAtB,EAAKC,MAAMC,OAAc,CAC3B,IAAIC,EAAeC,KAAKC,MACvBD,KAAKE,SAAW,EAAKL,MAAMM,YAAYC,QAIxC,EAAKT,SAAS,CAACU,UAAW,EAAKR,MAAMM,YAAYJ,GAAcO,UACzD,CACN,IAAMC,EAAK,EAAKV,MAAMC,OAClBU,EAAM,EAAKX,MAAMM,YAAYM,MAAK,SAAAC,GAAC,OAAIA,EAAEH,KAAOA,KACpDI,QAAQC,IAAIJ,GACZ,EAAKb,SAAS,CAACU,UAAWG,EAAIF,QA/BlB,EAmCdO,aAAe,aAhCd,EAAKhB,MAAQ,CACZiB,UAAW,KACXC,QAAS,UACTC,WAAY,OACZX,UAAW,gCACXP,OAAQ,GACRK,YAAa,IATD,E,iFAqCO,IAAD,OACjBc,MAAM,qCACHC,MAAK,SAAAC,GAAI,OAAIA,EAAKC,UAClBF,MAAK,SAAAG,GAAa,IACTC,EAAUD,EAASF,KAAnBG,MACR,EAAK3B,SAAS,CAAEQ,YAAamB,S,+BAMnC,OACC,6BACC,yBAAKC,UAAU,aACb,2BAAOC,QAAQ,WAAf,YACD,2BACCC,KAAK,OACLhC,KAAK,UACLiC,YAAY,WACZC,SAAUC,KAAKtC,aACfI,MAAOkC,KAAK/B,MAAMkB,UAEnB,2BAAOS,QAAQ,cAAf,eACA,2BACCC,KAAK,OACLhC,KAAK,aACLiC,YAAY,cACZC,SAAUC,KAAKtC,aACfI,MAAOkC,KAAK/B,MAAMmB,aAEnB,2BAAOQ,QAAQ,aAAf,aACA,2BACCC,KAAK,SACLhC,KAAK,YACLiC,YAAY,YACZC,SAAUC,KAAKtC,aACfI,MAAOkC,KAAK/B,MAAMiB,YAGxB,2BAAOU,QAAQ,UAAf,aACA,4BACCG,SAAUC,KAAKtC,aACfG,KAAK,UAEN,4BAAQC,MAAM,IAAd,UACE,4BAAQA,MAAM,aAAd,wBACA,4BAAQA,MAAM,aAAd,oBACA,4BAAQA,MAAM,UAAd,uBACA,4BAAQA,MAAM,WAAd,gDACA,4BAAQA,MAAM,aAAd,wBACA,4BAAQA,MAAM,aAAd,sBAGG,4BAAQmC,QAASD,KAAKhC,aAAtB,cAGD,yBAAK2B,UAAU,QACd,wBACCO,MAAO,CAACC,SAAUC,OAAOJ,KAAK/B,MAAMiB,YACpCS,UAAU,OAETK,KAAK/B,MAAMkB,SAGb,yBAAKkB,IAAKL,KAAK/B,MAAMQ,UAAW6B,IAAI,KAEpC,wBACCJ,MAAO,CAACC,SAAUC,OAAOJ,KAAK/B,MAAMiB,YACpCS,UAAU,UAETK,KAAK/B,MAAMmB,kB,GA5GUmB,aCQbC,G,uLAJb,OAAO,kBAAC,EAAD,U,GAFSC,IAAMF,YCIxBG,IAASC,OACR,kBAAC,EAAD,MACAC,SAASC,cAAc,W","file":"static/js/main.c97ea3d7.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\n\r\nclass MemeGenerator extends Component{\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\tthis.state = {\r\n\t\t\tfont_size: \"40\",\r\n\t\t\ttopText: \"Example\",\r\n\t\t\tbottomText: \"Text\",\r\n\t\t\trandomImg: \"http://i.imgflip.com/1bij.jpg\",\r\n\t\t\tmemeID: \"\",\r\n\t\t\tallMemeImgs: []\r\n\t\t};\r\n\t};\r\n\r\n\r\n\thandleChange = event => {\r\n\t\tconst {name, value} = event.target;\r\n\t\tthis.setState({[name]: value});\r\n\t}\r\n\r\n\thandleClick = () => {\r\n\t\tif(this.state.memeID === \"\"){\r\n\t\t\tlet randomNumber = Math.floor(\r\n\t\t\t\tMath.random() * this.state.allMemeImgs.length\r\n\t\t\t);\r\n\r\n\r\n\t\t\tthis.setState({randomImg: this.state.allMemeImgs[randomNumber].url});\r\n\t\t} else {\r\n\t\t\tconst id = this.state.memeID;\r\n\t\t\tlet obj = this.state.allMemeImgs.find(x => x.id === id);\r\n\t\t\tconsole.log(obj);\r\n\t\t\tthis.setState({randomImg: obj.url});\r\n\t\t}\r\n\t}\r\n\r\n\tincreaseFont = () => {};\r\n\r\n\tcomponentDidMount() {\r\n    fetch(\"https://api.imgflip.com/get_memes\")\r\n      .then(data => data.json())\r\n      .then(response => {\r\n        const { memes } = response.data;\r\n        this.setState({ allMemeImgs: memes });\r\n      });\r\n  }\r\n\r\n\trender (){\r\n\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<div className=\"meme-form\">\r\n\t\t\t\t  <label htmlFor=\"topText\">Top Text</label>\r\n\t\t\t\t\t<input \r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\tname=\"topText\"\r\n\t\t\t\t\t\tplaceholder=\"top text\"\r\n\t\t\t\t\t\tonChange={this.handleChange}\r\n\t\t\t\t\t\tvalue={this.state.topText}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<label htmlFor=\"bottomText\">Bottom Text</label>\r\n\t\t\t\t\t<input \r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\tname=\"bottomText\"\r\n\t\t\t\t\t\tplaceholder=\"bottom text\"\r\n\t\t\t\t\t\tonChange={this.handleChange}\r\n\t\t\t\t\t\tvalue={this.state.bottomText}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<label htmlFor=\"font_size\">Font Size</label>\r\n\t\t\t\t\t<input \r\n\t\t\t\t\t\ttype=\"number\"\r\n\t\t\t\t\t\tname=\"font_size\"\r\n\t\t\t\t\t\tplaceholder=\"font size\"\r\n\t\t\t\t\t\tonChange={this.handleChange}\r\n\t\t\t\t\t\tvalue={this.state.font_size}\r\n\t\t\t\t\t/>\r\n\r\n<label htmlFor=\"memeID\">Meme List</label>\r\n<select\r\n\tonChange={this.handleChange}\r\n\tname=\"memeID\"\r\n>\r\n<option value=\"\">Random</option>\r\n  <option value=\"188390779\">Woman Yelling at Cat</option>\r\n  <option value=\"100777631\">Is This A Pigeon</option>\r\n  <option value=\"563423\">That Would Be Great</option>\r\n  <option value=\"3218037\">This Is Where I'd Put My Trophy If I Had One</option>\r\n  <option value=\"112126428\">Distracted Boyfriend</option>\r\n  <option value=\"102156234\">Mocking Spongebob</option>\r\n</select>\r\n\r\n\t\t\t\t\t<button onClick={this.handleClick}>Generate!</button>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className=\"meme\">\r\n\t\t\t\t\t<h2\r\n\t\t\t\t\t\tstyle={{fontSize: Number(this.state.font_size) }}\r\n\t\t\t\t\t\tclassName=\"top\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{this.state.topText}\r\n\t\t\t\t\t</h2>\r\n\r\n\t\t\t\t\t<img src={this.state.randomImg} alt=\"\" />\r\n\r\n\t\t\t\t\t<h2\r\n\t\t\t\t\t\tstyle={{fontSize: Number(this.state.font_size) }}\r\n\t\t\t\t\t\tclassName=\"bottom\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{this.state.bottomText}\r\n\t\t\t\t\t</h2>\r\n\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default MemeGenerator;","import React from 'react';\r\nimport MemeGenerator from \"./components/MemeGenerator\";\r\nimport \"./App.css\";\r\n\r\nclass App extends React.Component {\r\n\trender() {\r\n\t\treturn <MemeGenerator />\r\n\t}\r\n}\r\n\r\nexport default App;\r\n","// Import the React and ReactDOM libraries\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\n\r\n\r\n// Take the react component and show it on the screen\r\nReactDOM.render(\r\n\t<App />,\r\n\tdocument.querySelector(\"#root\")\r\n);"],"sourceRoot":""}